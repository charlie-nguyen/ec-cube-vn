{% extends '@admin/default_frame.twig' %}

{% set menus = ['store', 'plugin', 'plugin_owners_search'] %}

{% block title %}{{'admin.store.plugin_search.885'|trans}}{% endblock %}
{% block sub_title %}{{'admin.store.plugin_search.884'|trans}}{% endblock %}

{% block javascript %}
<script src="{{ asset('assets/js/redom.min.js', 'customize') }}"></script>
<script>
const pluginsData = JSON.parse('{{ pluginsAsJson|e('js') }}');
const categoriesData = JSON.parse('{{ categoriesAsJson|e('js') }}');
const { el, list, setAttr, setChildren, mount } = redom;

class PaginationItem {
    constructor () {
        this.spinner = el("i.fa.fa-spinner.fa-pulse.fa-1x.fa-fw.margin-bottom");
        this.text = el("span");
        this.button = el("button.page-link",[this.text]);
        this.el = el("li.page-item", [this.button]);
        this.button.onclick = e => {
            e.preventDefault();
            // setAttr(this.button, {"disabled": "disabled"});
            // setAttr(app.search.pageNum, {"value": parseInt(this.text.textContent)});
            // setChildren(this.button, [this.spinner]);
            // app.search.submit.click();
        };
    }
    update (data) {
        if (data.hasOwnProperty('textContent')) {
            setAttr(this.text, {"textContent": data.textContent});
        }
        if (data.hasOwnProperty('active')) {
            setAttr(this.el, {"className": this.el.className + ' active'});
            setAttr(this.button, {"disabled": "disabled"});
        } else {
            setAttr(this.el, {"className": this.el.className.replace(" active", "")});
            setAttr(this.button, {"disabled": ""});
        }
    }
}

class Pagination {
    constructor () {
        this.el = list("ul.pagination.justify-content-center", PaginationItem);
    }

    update (data) {
        this.el.update([]);
        if (data.hasOwnProperty("pageSize") && data.hasOwnProperty("pageNum") && data.hasOwnProperty("totals")) {
            let list = [];
            let pageCount = Math.ceil(data.totals/data.pageSize);
            let pageNum = parseInt(data.pageNum);
            let availablePage = 2;
            let pageMax = pageNum + availablePage;
            let i = pageNum - availablePage;
            for (i;i<=pageMax;i++) {
                if (i > 0 && i <= pageCount) {
                    let item = {textContent: i};
                    if (i === pageNum) {
                        item.active = true;
                    }
                    list.push(item);
                }
            }
            this.el.update(list);
        }
    }
}

class SearchCategoryLi {
    constructor () {
        this.input = el("input", {"name": "search[category][]", "type": "checkbox", "value": ""});
        this.a = el("a.ml-2", {"href":"#", "tabindex":"-1"});
        this.el = el("li", [this.input, this.a]);
    }

    update (data) {
        if (data.hasOwnProperty("title")) {
            setAttr(this.a, {"textContent": data.title});
        }
        if (data.hasOwnProperty("id")) {
            setAttr(this.input, {"value": data.id});
        }
    }
}

class Plugin {
    constructor () {
        this.image = el("img.w-100.img-responsive",{ "alt":"", "src":"https://codecanyon.img.customer.envatousercontent.com/files/245053411/Small+Preview+590x300.jpg?auto=compress%2Cformat&fit=crop&crop=top&w=590&h=300&s=bad280e311cd41d3f93eca068e9a29c3"});
        this.title = el("a.font-weight-bold",{ "href":"#", "target":"_blank"});
        this.description = el("p");
        this.price = el("h4.mb-0.font-weight-bold");

        this.el = el('div.plugin-item',
          el("hr"),
          el("div.row.py-2",[
            el("div.col-4",[
              el("div.plugin-img",[
                this.image
              ])
            ]),
            el("div.col-5",[
              el("div.plugin-title",[
                el("h5.mb-0",[
                  this.title
                ])
              ]),
              el("div.plugin-provider.mb-3",[
                el("span.mr-1", "by"),
                el("a",{"href":"#","textContent":"OnShop"}),
                el("span.mx-1", "in"),
                el("a",{"href":"#","textContent":"Reporting"}),
              ]),
              el("div.plugin-version",[
                el("label.font-weight-bold","Version:"),
                el("span.mx-1","1.0"),
                el("span.font-italic",[
                  el("a",{"href":"#", "textContent":"View change log"})
                ])
              ]),
              el("div.plugin-desc",[
                this.description
              ]),
            ]),
            el("div.col-3.text-center.border-left.position-relative",[
              el("div.plugin-payment",[
                el("div.plugin-price.text-danger.d-flex.justify-content-center.align-items-end.mb-2",[
                  this.price,
                  el("small.pl-2", "{{ 'common.tax_include'|trans }}")
                ]),
                el("div.plugin-rating.d-flex.justify-content-center.align-items-end.h6.mb-0",[
                  el("p.stars.mb-0",[
                    el("span.star.text-warning",[
                      el("i.fas.fa-star")
                    ])
                  ]),
                  el("small.plugin-number.text-muted.pl-2","1K")
                ]),
                el("div.plugin-download.font-italic.text-muted",[
                  el("small","989 downloads")
                ])
              ]),
              el("div.plugin-action.position-absolute.fixed-bottom.px-4.d-flex.justify-content-center",[
                el("a.btn btn-ec-regular.w-50.mx-1",{"href":"#", "textContent":"{{'admin.store.plugin_owners_search.detail'|trans}}"}),
                el("a.btn.btn.btn-primary.w-50.mx-1",{"href":"#", "textContent":"{{'admin.store.plugin_owners_search.install.free'|trans}}"})
              ])
            ])
          ]));
    }

    update (data) {
      if (data.hasOwnProperty("thumbnail")) {
          setAttr(this.image, {"src": data.thumbnail});
      }
      if (data.hasOwnProperty("title")) {
          setAttr(this.title, {"textContent": data.title});
      }
      if (data.hasOwnProperty("description")) {
          setAttr(this.description, {"textContent": data.description});
      }
      if (data.hasOwnProperty("price")) {
          setAttr(this.price, {"textContent": data.price});
      }
    }
}

class App {
    constructor() {
        this.categories = list("ul.dropdown-menu.w-100", SearchCategoryLi, {"x-placement": "bottom-start"});
        this.pagination = new Pagination();
        this.searchInfo = el("span.font-weight-bold.ml-2", "{{ 'admin.store.plugin_owners_search.search_results'|trans({'%number%': '_pageSize_', '%total%' : '_totals_'}) }}");
        this.plugins = list("div.card-body", Plugin);
        this.submitText = el("span.ladda-label", "{{ 'admin.store.plugin_owners_search.search_button'|trans }}");
        this.submitSpinner = el("span.ladda-spinner");
        this.submitBtn = el("button.btn.btn-ec-conversion.px-5.ladda-button.rounded-0", {"type":"submit", "data-style":"expand-right"});

        this.el = el('div',[
            el("div.c-outsideBlock", [
              el("div.c-outsideBlock__contents.mb-5", [
                el("div.row", [
                  el("div.col-4",[
                    el("div.position-relative", [
                      el("button.btn.btn-default.dropdown-toggle.form-control.text-left", { "aria-expanded": false, "data-toggle": "dropdown", "type": "button"}, [
                        el("span", "{{ 'customize.ownerstore.categories'|trans }}"),
                        el("span.caret")
                      ]),
                      this.categories
                    ])
                  ]),
                  el('div.col-2.px-0',[
                    el('div.position-relative',[
                      el("button.btn.btn-default.dropdown-toggle.form-control.text-left", { "aria-expanded": false, "data-toggle": "dropdown", "type": "button"}, [
                        el("span", "{{ 'admin.store.plugin.price'|trans }}"),
                        el("span.caret")
                      ]),
                      el("ul.dropdown-menu.w-100", {"x-placement": "bottom-start"}, [
                        el("li", [
                          el("input", {"name":"search[price][]", "type":"checkbox", "value": ""}),
                          el("a.ml-2", {"href":"#", "tabindex":"-1", "textContent": "Mien phÃ­"}),
                        ])
                      ])
                    ])
                  ]),
                  el("div.col-6", [
                    el("div.d-flex",[
                      el("input.form-control.border-right-0.rounded-0",{"name":"search[keyword]", "type":"text", "placeholder":"{{ 'common.search_keyword'|trans }}"}),
                      this.submitBtn
                    ])
                  ])
                ])
              ])
            ]),
            el("div.c-contentsArea__cols",[
              el("div.c-contentsArea__primaryCol",[
                el("div.card.rounded border-0",[
                  el("div.card-header",[
                    this.searchInfo
                  ]),
                  this.plugins,
                  el("div.card-footer",[
                    this.pagination
                  ])
                ])
              ])
            ])
        ]);

        this.submitBtn.onclick = e => {
          e.preventDefault();

          console.log('hehe');
        };

        this.categories.update(categoriesData.items);
        this.update(pluginsData);

    }

    update (data) {
        this.pagination.update(data);
        this.plugins.update(data.items);

        if (data.hasOwnProperty("pageSize") && data.hasOwnProperty("totals")) {
            let text = this.searchInfo.textContent;
            text = text.replace("_pageSize_", data.pageSize);
            text = text.replace("_totals_", data.totals);
            setAttr(this.searchInfo, {"textContent": text});
        }
    }
}
const app = new App();
mount(document.getElementById('app'), app);
</script>
{% endblock %}

{% block main %}
<div id="app">

</div>
{% endblock %}